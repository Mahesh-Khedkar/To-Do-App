{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Shekhar\\\\React\\\\React\\\\nav_react\\\\src\\\\pages\\\\MakeList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport use from \"./use.js\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport img_50 from \"./images/img_50.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  useEffect(() => {\n    use();\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  console.log(errors);\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post(\"http://localhost:8080/todo/registerList\", data).then(response => {\n      console.log(response);\n      swal(\"Task registered!!\");\n      window.location = \"/user/viewList\";\n    }).catch(error => {\n      //console.log(error.response.data.result);\n      //swal(error.response.data.result);\n      swal(\"invalid credentials\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid \",\n    style: {\n      backgroundImage: `url(${img_50})`,\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      height: \"600px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Task\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          align: \"center\",\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card border-0 shadow w-75 p-5 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                className: \"form-control\",\n                id: \"userId\",\n                name: \"userId\",\n                value: JSON.parse(sessionStorage.user).userId,\n                placeholder: \"Enter your complaint details here\",\n                ...register(\"userId\", {\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"description\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control\",\n                  id: \"description\",\n                  name: \"description\",\n                  placeholder: \"Enter your Task details here\",\n                  ...register(\"description\", {\n                    required: true,\n                    pattern: /[A-Za-z0-9]{3}/,\n                    min: 20,\n                    max: 500\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 17\n                }, this), errors.description && errors.description.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"alert\",\n                  class: \"imp\",\n                  children: \"*This field is required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), errors.description && errors.description.type === \"pattern\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"alert\",\n                  class: \"imp\",\n                  children: \"*Must not use symbols\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), errors.description && errors.description.type === \"min\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"alert\",\n                  class: \"imp\",\n                  children: \"*Please Fill the description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"description\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                id: \"date\",\n                name: \"date\",\n                placeholder: \"Enter your date here\",\n                ...register(\"date\", {\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), errors.description && errors.description.type === \"required\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"alert\",\n                class: \"imp\",\n                children: \"*This field is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              children: \"Make List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"jBYhh7Hd+EroQGJPDxM5RQvE9Y8=\", false, function () {\n  return [useForm];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Shekhar/React/React/nav_react/src/pages/MakeList.js"],"names":["React","useForm","use","useEffect","axios","swal","img_50","TodoList","register","handleSubmit","formState","errors","console","log","onSubmit","data","post","then","response","window","location","catch","error","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","height","JSON","parse","sessionStorage","user","userId","required","pattern","min","max","description","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport use from \"./use.js\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport img_50 from \"./images/img_50.jpg\";\r\n\r\nfunction TodoList() {\r\n  useEffect(() => {\r\n    use();\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  console.log(errors);\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    axios\r\n      .post(\"http://localhost:8080/todo/registerList\", data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Task registered!!\");\r\n        window.location = \"/user/viewList\";\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error.response.data.result);\r\n        //swal(error.response.data.result);\r\n        swal(\"invalid credentials\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n        className=\"container-fluid \"\r\n        style={{\r\n          backgroundImage: `url(${img_50})`,\r\n          backgroundPosition: \"center\",\r\n          backgroundSize: \"cover\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          height: \"600px\",\r\n        }}\r\n      \r\n      >\r\n    <div className=\"Task\">\r\n      <div className=\"container py-5\">\r\n        <h1 align=\"center\">Details</h1>\r\n        <div className=\"card border-0 shadow w-75 p-5 mx-auto\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            \r\n            <div className=\"form-group\">\r\n              {/* <label htmlFor=\"userId\">user id</label> */}\r\n              <input\r\n                type=\"hidden\"\r\n                className=\"form-control\"\r\n                id=\"userId\"\r\n                name=\"userId\"\r\n                value={JSON.parse(sessionStorage.user).userId}\r\n                placeholder=\"Enter your complaint details here\"\r\n                {...register(\"userId\", {\r\n                  required: true,\r\n                })}\r\n              />\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  placeholder=\"Enter your Task details here\"\r\n                  {...register(\"description\", {\r\n                    required: true,\r\n                    pattern: /[A-Za-z0-9]{3}/,\r\n                    min: 20,\r\n                    max: 500,\r\n                  })}\r\n                />\r\n                {errors.description && errors.description.type === \"required\" && (\r\n                  <span role=\"alert\" class=\"imp\">\r\n                    *This field is required\r\n                  </span>\r\n                )}\r\n                {errors.description && errors.description.type === \"pattern\" && (\r\n                  <span role=\"alert\" class=\"imp\">\r\n                    *Must not use symbols\r\n                  </span>\r\n                )}\r\n                {errors.description && errors.description.type === \"min\" && (\r\n                  <span role=\"alert\" class=\"imp\">\r\n                    *Please Fill the description\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  placeholder=\"Enter your date here\"\r\n                  {...register(\"date\", {\r\n                    required: true,\r\n                  })}\r\n                />\r\n                {errors.description && errors.description.type === \"required\" && (\r\n                  <span role=\"alert\" class=\"imp\">\r\n                    *This field is required\r\n                  </span>\r\n                )}\r\n            </div>\r\n\r\n            {/* <div className=\"form-group\">\r\n              <label htmlFor=\"dates\"> Date of: </label>\r\n              <input type=\"date\" id=\"dates\" name=\"dates\"></input>\r\n                </div>*/ }\r\n\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Make List\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}